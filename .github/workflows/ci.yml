name: CI

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Set up uv
        uses: astral-sh/setup-uv@v3

      - name: Sync dependencies
        run: uv sync --group dev --group infra

      - name: Ruff lint (backend)
        run: uv run ruff check backend

      - name: Ruff lint (infra)
        run: uv run ruff check infra

      - name: Pytest
        run: PYTHONPATH=. uv run pytest

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: lint-test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.api_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Set up uv
        uses: astral-sh/setup-uv@v3

      - name: Sync dependencies
        run: uv sync --group dev --group infra

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: CDK Synth
        run: uv run cdk synth

      - id: deploy
        name: CDK Deploy
        run: |
          uv run cdk deploy --require-approval never --outputs-file cdk-outputs.json
          API_URL=$(jq -r '.OffersApiStack.ApiUrl' cdk-outputs.json)
          echo "api_url=$API_URL" >> "$GITHUB_OUTPUT"
